import React, { useState } from 'react';
import './App.css';
import SBOMMigrate from './components/SBOMMigrate';
import VEXConverter from './components/VEXConverter';

function App() {
  const [activeCard, setActiveCard] = useState(null);

  const tools = [
    {
      id: 'comments-transfer',
      title: 'Vulnerability Comments Transfer',
      icon: 'üîÑ',
      description: '–ü–µ—Ä–µ–Ω–æ—Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –º–µ–∂–¥—É –≤—ã–≥—Ä—É–∑–∫–∞–º–∏ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–ø–æ—Å—Ç–∞–≤–ª—è–µ—Ç CVE/CWE –∏ –ø—Ä–æ–µ–∫—Ç—ã.',
      component: SBOMMigrate,
      active: true
    },
    {
      id: 'gitleaks',
      title: 'GitLeaks Scanner',
      icon: 'üîê',
      description: '–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —É—Ç–µ—á–µ–∫ —Å–µ–∫—Ä–µ—Ç–æ–≤ –∏ —É—á—ë—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö',
      active: false
    },
    {
      id: 'vex-converter',
      title: 'VEX Converter',
      icon: 'üìã',
      description: '–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ CycloneDX SBOM –≤ —Ñ–æ—Ä–º–∞—Ç VEX (Vulnerability Exploitability eXchange)',
      component: VEXConverter,
      active: true
    },
    {
      id: 'vuln-analyzer',
      title: 'Vulnerability Analyzer',
      icon: 'üîç',
      description: '–ê–Ω–∞–ª–∏–∑ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á—ë—Ç–æ–≤',
      active: false
    },
    {
      id: 'dependency-checker',
      title: 'Dependency Checker',
      icon: 'üì¶',
      description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π',
      active: false
    },
    {
      id: 'sbom-validator',
      title: 'SBOM Validator',
      icon: '‚úÖ',
      description: '–í–∞–ª–∏–¥–∞—Ü–∏—è SBOM —Ñ–∞–π–ª–æ–≤ –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º CycloneDX –∏ SPDX',
      active: false
    }
  ];

  const handleCardClick = (tool) => {
    if (tool.active) {
      setActiveCard(activeCard === tool.id ? null : tool.id);
    }
  };

  const handleBack = () => {
    setActiveCard(null);
  };

  return (
    <div className="App">
      <div className="container">
        <div className="header">
          <h1>DevSecOps Tools</h1>
          <p>–ù–∞–±–æ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å SBOM –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—è–∑–≤–∏–º–æ—Å—Ç—è–º–∏</p>
        </div>

        {activeCard ? (
          <div className="active-tool-view">
            {tools.find(t => t.id === activeCard)?.component &&
              React.createElement(tools.find(t => t.id === activeCard).component, { onBack: handleBack })
            }
          </div>
        ) : (
          <div className="cards-grid">
            {tools.map(tool => (
              <div
                key={tool.id}
                className={`card ${!tool.active ? 'coming-soon' : ''}`}
                onClick={() => handleCardClick(tool)}
              >
                <div className="card-header">
                  <div style={{ display: 'flex', alignItems: 'center' }}>
                    <span className="card-icon">{tool.icon}</span>
                    <h2 className="card-title">{tool.title}</h2>
                  </div>
                </div>
                <p className="card-description">{tool.description}</p>
                <span className={`card-badge ${!tool.active ? 'coming-soon-badge' : ''}`}>
                  {tool.active ? '–î–æ—Å—Ç—É–ø–Ω–æ' : 'Coming Soon'}
                </span>
              </div>
            ))}
          </div>
        )}
      </div>
    </div>
  );
}

export default App;
