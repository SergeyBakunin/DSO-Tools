import React, { useState } from 'react';
import axios from 'axios';

const VEXConverter = ({ onBack }) => {
  const [sbomFile, setSbomFile] = useState(null);
  const [loading, setLoading] = useState(false);
  const [result, setResult] = useState(null);
  const [error, setError] = useState(null);

  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';

  const handleFileChange = (e) => {
    setSbomFile(e.target.files[0]);
    setResult(null);
    setError(null);
  };

  const handleAnalyze = async () => {
    if (!sbomFile) {
      setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ SBOM —Ñ–∞–π–ª');
      return;
    }

    setLoading(true);
    setError(null);
    setResult(null);

    const formData = new FormData();
    formData.append('sbom_file', sbomFile);

    try {
      const response = await axios.post(`${API_URL}/api/sbom-to-vex`, formData, {
        headers: {
          'Content-Type': 'multipart/form-data',
        },
      });

      setResult(response.data);
    } catch (err) {
      setError(err.response?.data?.detail || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ SBOM');
    } finally {
      setLoading(false);
    }
  };

  const handleConvert = async () => {
    if (!sbomFile) {
      setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ SBOM —Ñ–∞–π–ª');
      return;
    }

    setLoading(true);
    setError(null);

    const formData = new FormData();
    formData.append('sbom_file', sbomFile);

    try {
      const response = await axios.post(`${API_URL}/api/sbom-to-vex/export`, formData, {
        headers: {
          'Content-Type': 'multipart/form-data',
        },
        responseType: 'blob',
      });

      // –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏–ª–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º
      const contentDisposition = response.headers['content-disposition'];
      let filename = 'vex_document.json';
      if (contentDisposition) {
        const filenameMatch = contentDisposition.match(/filename="?(.+)"?/i);
        if (filenameMatch) {
          filename = filenameMatch[1];
        }
      }

      const url = window.URL.createObjectURL(new Blob([response.data]));
      const link = document.createElement('a');
      link.href = url;
      link.setAttribute('download', filename);
      document.body.appendChild(link);
      link.click();
      link.remove();

      setResult({
        status: 'success',
        message: 'VEX –¥–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∏ –∑–∞–≥—Ä—É–∂–µ–Ω',
        filename: filename
      });
    } catch (err) {
      setError(err.response?.data?.detail || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="tool-container">
      <button onClick={onBack} className="back-button">
        ‚Üê –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
      </button>

      <div className="tool-header">
        <h2>üìã VEX Converter</h2>
        <p>–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è CycloneDX SBOM –≤ —Ñ–æ—Ä–º–∞—Ç VEX (Vulnerability Exploitability eXchange)</p>
      </div>

      <div className="upload-section">
        <div className="file-input-group">
          <label>
            <strong>SBOM —Ñ–∞–π–ª (CycloneDX v1.6):</strong>
            <input
              type="file"
              accept=".json"
              onChange={handleFileChange}
              disabled={loading}
            />
            {sbomFile && <span className="file-name">‚úì {sbomFile.name}</span>}
          </label>
        </div>
      </div>

      <div className="action-buttons">
        <button
          onClick={handleAnalyze}
          disabled={loading || !sbomFile}
          className="btn-primary"
        >
          {loading ? '–ê–Ω–∞–ª–∏–∑...' : '–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å SBOM'}
        </button>

        <button
          onClick={handleConvert}
          disabled={loading || !sbomFile}
          className="btn-success"
        >
          {loading ? '–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è...' : '–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ VEX'}
        </button>
      </div>

      {error && (
        <div className="message error-message">
          <strong>–û—à–∏–±–∫–∞:</strong> {error}
        </div>
      )}

      {result && (
        <div className="message success-message">
          <strong>–£—Å–ø–µ—Ö!</strong>
          {result.message ? (
            <div className="result-details">
              <p>{result.message}</p>
              {result.filename && <p>–§–∞–π–ª: {result.filename}</p>}
            </div>
          ) : (
            <div className="result-details">
              <h4>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:</h4>
              <p>‚úì –§–æ—Ä–º–∞—Ç SBOM: {result.sbom_format} (–≤–µ—Ä—Å–∏—è {result.sbom_version})</p>
              <p>‚úì –ö–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –≤ SBOM: {result.sbom_components}</p>
              <p>‚úì –£—è–∑–≤–∏–º–æ—Å—Ç–µ–π –≤ SBOM: {result.sbom_vulnerabilities}</p>
              <p>‚úì –£—è–∑–≤–∏–º–æ—Å—Ç–µ–π –≤ VEX: {result.vex_vulnerabilities}</p>
              <p>‚úì –°–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä VEX: {result.vex_serial_number}</p>
              <p>‚úì –í—Ä–µ–º—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: {new Date(result.conversion_timestamp).toLocaleString('ru-RU')}</p>
            </div>
          )}
        </div>
      )}

      <div className="info-section">
        <h3>–ß—Ç–æ —Ç–∞–∫–æ–µ VEX?</h3>
        <p>
          VEX (Vulnerability Exploitability eXchange) - —ç—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç –¥–ª—è –æ–±–º–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
          –æ –ø—Ä–∏–º–µ–Ω–∏–º–æ—Å—Ç–∏ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –ø—Ä–æ–¥—É–∫—Ç–∞–º. VEX –¥–æ–∫—É–º–µ–Ω—Ç –ø–æ–º–æ–≥–∞–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å,
          –∫–∞–∫–∏–µ —É—è–∑–≤–∏–º–æ—Å—Ç–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–º–µ–Ω–∏–º—ã –∫ –≤–∞—à–µ–º—É –ø—Ä–æ–¥—É–∫—Ç—É, –∞ –∫–∞–∫–∏–µ - –Ω–µ—Ç.
        </p>

        <h3>–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä:</h3>
        <ol>
          <li>–ó–∞–≥—Ä—É–∑–∏—Ç–µ SBOM —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ CycloneDX v1.6 (JSON)</li>
          <li>–ù–∞–∂–º–∏—Ç–µ "–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å SBOM" –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏</li>
          <li>–ù–∞–∂–º–∏—Ç–µ "–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ VEX" –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è VEX –¥–æ–∫—É–º–µ–Ω—Ç–∞</li>
          <li>VEX –¥–æ–∫—É–º–µ–Ω—Ç –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω</li>
        </ol>

        <h3>–ß—Ç–æ –≤–∫–ª—é—á–∞–µ—Ç—Å—è –≤ VEX –¥–æ–∫—É–º–µ–Ω—Ç:</h3>
        <ul>
          <li>–í—Å–µ —É—è–∑–≤–∏–º–æ—Å—Ç–∏ –∏–∑ SBOM</li>
          <li>–†–µ–π—Ç–∏–Ω–≥–∏ –∏ –æ—Ü–µ–Ω–∫–∏ (CVSS scores)</li>
          <li>–°—Å—ã–ª–∫–∏ –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ (NVD, GitHub Advisories, –∏ —Ç.–¥.)</li>
          <li>CWE –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è</li>
          <li>–û–ø–∏—Å–∞–Ω–∏—è –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</li>
          <li>–ó–∞—Ç—Ä–æ–Ω—É—Ç—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã</li>
          <li>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ</li>
        </ul>

        <div className="supported-formats">
          <strong>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç:</strong> CycloneDX 1.6 (JSON)
        </div>
      </div>
    </div>
  );
};

export default VEXConverter;
