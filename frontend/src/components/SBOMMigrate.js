import React, { useState } from 'react';
import axios from 'axios';

const SBOMMigrate = ({ onBack }) => {
  const [sourceFile, setSourceFile] = useState(null);
  const [targetFile, setTargetFile] = useState(null);
  const [exportFormat, setExportFormat] = useState('xlsx');
  const [loading, setLoading] = useState(false);
  const [result, setResult] = useState(null);
  const [error, setError] = useState(null);

  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';

  const handleSourceFileChange = (e) => {
    setSourceFile(e.target.files[0]);
    setResult(null);
    setError(null);
  };

  const handleTargetFileChange = (e) => {
    setTargetFile(e.target.files[0]);
    setResult(null);
    setError(null);
  };

  const handleMigrate = async () => {
    if (!sourceFile || !targetFile) {
      setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–±–∞ —Ñ–∞–π–ª–∞');
      return;
    }

    setLoading(true);
    setError(null);
    setResult(null);

    const formData = new FormData();
    formData.append('source_file', sourceFile);
    formData.append('target_file', targetFile);

    try {
      const response = await axios.post(`${API_URL}/api/sbom-migrate`, formData, {
        headers: {
          'Content-Type': 'multipart/form-data',
        },
      });

      setResult(response.data);
    } catch (err) {
      setError(err.response?.data?.detail || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏');
    } finally {
      setLoading(false);
    }
  };

  const handleExport = async () => {
    if (!sourceFile || !targetFile) {
      setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–±–∞ —Ñ–∞–π–ª–∞');
      return;
    }

    setLoading(true);
    setError(null);

    const formData = new FormData();
    formData.append('source_file', sourceFile);
    formData.append('target_file', targetFile);
    formData.append('export_format', exportFormat);

    try {
      const response = await axios.post(`${API_URL}/api/sbom-migrate/export`, formData, {
        headers: {
          'Content-Type': 'multipart/form-data',
        },
        responseType: 'blob',
      });

      const url = window.URL.createObjectURL(new Blob([response.data]));
      const link = document.createElement('a');
      link.href = url;
      link.setAttribute('download', `sbom_migrated.${exportFormat}`);
      document.body.appendChild(link);
      link.click();
      link.remove();

      setResult({ status: 'success', message: '–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω' });
    } catch (err) {
      setError(err.response?.data?.detail || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="tool-container">
      <button onClick={onBack} className="back-button">
        ‚Üê –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
      </button>

      <div className="tool-header">
        <h2>üîÑ Vulnerability Comments Transfer</h2>
        <p>–ü–µ—Ä–µ–Ω–æ—Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –º–µ–∂–¥—É –≤—ã–≥—Ä—É–∑–∫–∞–º–∏ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π</p>
      </div>

      <div className="upload-section">
        <div className="file-input-group">
          <label>
            <strong>–°—Ç–∞—Ä–∞—è –≤—ã–≥—Ä—É–∑–∫–∞ (—Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏):</strong>
            <input
              type="file"
              accept=".csv,.xlsx"
              onChange={handleSourceFileChange}
              disabled={loading}
            />
            {sourceFile && <span className="file-name">‚úì {sourceFile.name}</span>}
          </label>
        </div>

        <div className="file-input-group">
          <label>
            <strong>–ù–æ–≤–∞—è –≤—ã–≥—Ä—É–∑–∫–∞:</strong>
            <input
              type="file"
              accept=".csv,.xlsx"
              onChange={handleTargetFileChange}
              disabled={loading}
            />
            {targetFile && <span className="file-name">‚úì {targetFile.name}</span>}
          </label>
        </div>

        <div className="format-selector">
          <label>
            <strong>–§–æ—Ä–º–∞—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞:</strong>
            <select
              value={exportFormat}
              onChange={(e) => setExportFormat(e.target.value)}
              disabled={loading}
            >
              <option value="xlsx">Excel (.xlsx)</option>
              <option value="csv">CSV (.csv)</option>
            </select>
          </label>
        </div>
      </div>

      <div className="action-buttons">
        <button
          onClick={handleMigrate}
          disabled={loading || !sourceFile || !targetFile}
          className="btn-primary"
        >
          {loading ? '–û–±—Ä–∞–±–æ—Ç–∫–∞...' : '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é'}
        </button>

        <button
          onClick={handleExport}
          disabled={loading || !sourceFile || !targetFile}
          className="btn-success"
        >
          {loading ? '–≠–∫—Å–ø–æ—Ä—Ç...' : '–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å'}
        </button>
      </div>

      {error && (
        <div className="message error-message">
          <strong>–û—à–∏–±–∫–∞:</strong> {error}
        </div>
      )}

      {result && (
        <div className="message success-message">
          <strong>–£—Å–ø–µ—Ö!</strong>
          {result.message ? (
            <p>{result.message}</p>
          ) : (
            <div className="result-details">
              <p>‚úì –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π –∏–∑ —Å—Ç–∞—Ä–æ–π –≤—ã–≥—Ä—É–∑–∫–∏: {result.source_rows}</p>
              <p>‚úì –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π –∏–∑ –Ω–æ–≤–æ–π –≤—ã–≥—Ä—É–∑–∫–∏: {result.target_rows}</p>
              <p>‚úì –ò—Ç–æ–≥–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: {result.result_rows}</p>
              <p>–°—Ç–æ–ª–±—Ü—ã –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ: {result.columns?.join(', ')}</p>
            </div>
          )}
        </div>
      )}

      <div className="info-section">
        <h3>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</h3>
        <ol>
          <li>–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç–∞—Ä—É—é –≤—ã–≥—Ä—É–∑–∫—É, —Å–æ–¥–µ—Ä–∂–∞—â—É—é –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏</li>
          <li>–ó–∞–≥—Ä—É–∑–∏—Ç–µ –Ω–æ–≤—É—é –≤—ã–≥—Ä—É–∑–∫—É, –≤ –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏</li>
          <li>–°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–ø–æ—Å—Ç–∞–≤–∏—Ç –∑–∞–ø–∏—Å–∏ –ø–æ CVE ID –∏ Project</li>
          <li>–ù–∞–∂–º–∏—Ç–µ "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é" –¥–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞</li>
          <li>–ù–∞–∂–º–∏—Ç–µ "–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å" –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞</li>
        </ol>

        <div className="supported-formats">
          <strong>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:</strong> CSV, XLSX
        </div>
      </div>
    </div>
  );
};

export default SBOMMigrate;
