version: '3.8'

# Docker Compose конфигурация для NAS (Synology/QNAP)
# Оптимизирована для работы в NAS окружении

services:
  # Backend service (FastAPI)
  backend:
    image: devsecops-tools-backend:1.0.0
    container_name: devsecops-backend
    hostname: devsecops-backend

    # Порты - ВАЖНО: используем 8090 для соответствия Reverse Proxy
    ports:
      - "${BACKEND_PORT:-8090}:8000"

    # Переменные окружения
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=info
      - TZ=Europe/Moscow  # Настройте свой timezone

    # Volumes для данных (опционально)
    # Раскомментируйте если нужно сохранять данные на NAS
    # volumes:
    #   - /volume1/docker/devsecops/backend-data:/app/data
    #   - /volume1/docker/devsecops/backend-logs:/app/logs

    # Сеть
    networks:
      - devsecops-network

    # Политика перезапуска
    restart: unless-stopped

    # Health check (простая проверка процесса)
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

    # Ограничения ресурсов для NAS (Synology-совместимые)
    cpus: 1.0              # Максимум 1 CPU core
    mem_limit: 512M        # Максимум 512MB RAM
    mem_reservation: 256M  # Минимум 256MB RAM

    # Логирование
    logging:
      driver: "json-file"
      options:
        max-size: "10m"      # Максимум 10MB на файл
        max-file: "3"        # Хранить 3 файла (итого 30MB)

  # Frontend service (React + Nginx)
  frontend:
    image: devsecops-tools-frontend:1.0.0
    container_name: devsecops-frontend
    hostname: devsecops-frontend

    # Порты
    ports:
      - "${FRONTEND_PORT:-3000}:80"

    # Переменные окружения
    environment:
      # API URL - используем Reverse Proxy URL для доступа к backend
      - REACT_APP_API_URL=${API_URL:-https://dso.deone37.synology.me}
      - TZ=${TZ:-Europe/Moscow}

    # Зависимости
    depends_on:
      - backend

    # Сеть
    networks:
      - devsecops-network

    # Политика перезапуска
    restart: unless-stopped

    # Health check (проверка главной страницы)
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

    # Ограничения ресурсов для NAS (Synology-совместимые)
    cpus: 0.5              # Максимум 0.5 CPU core
    mem_limit: 256M        # Максимум 256MB RAM
    mem_reservation: 128M  # Минимум 128MB RAM

    # Логирование
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# Сеть
networks:
  devsecops-network:
    driver: bridge
    name: devsecops-network
    ipam:
      config:
        - subnet: 172.25.0.0/16  # Настройте под вашу сеть если нужно

# Volumes (опционально)
# Раскомментируйте если нужно использовать именованные volumes
# volumes:
#   backend-data:
#     driver: local
#     driver_opts:
#       type: none
#       o: bind
#       device: /volume1/docker/devsecops/backend-data
#   backend-logs:
#     driver: local
#     driver_opts:
#       type: none
#       o: bind
#       device: /volume1/docker/devsecops/backend-logs
